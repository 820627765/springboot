1，目前比较常用的模板引擎举例
   - JSP           SpringBoot 默认不支持JSP，需要修改，后面再研究。
   - Velocity
   - Freemarker
   - Thymeleaf     SpringBoot推荐的模板引擎，语法简单，功能更强大。

2，如何在SpringBoot项目中使用 Thymeleaf 模板引擎
   可以通过 ThymeleafAutoConfiguration 自动配置类来了解 Thymeleaf 的功能。我们通过自动配置类的配置类（ThymeleafProperties）来看看是怎么使用的：
    @ConfigurationProperties(prefix = "spring.thymeleaf")
    public class ThymeleafProperties {
    	private static final Charset DEFAULT_ENCODING = Charset.forName("UTF-8");
    	private static final MimeType DEFAULT_CONTENT_TYPE = MimeType.valueOf("text/html");
    	public static final String DEFAULT_PREFIX = "classpath:/templates/";
    	public static final String DEFAULT_SUFFIX = ".html";
    	//只要我们把HTML页面放在 classpath:/templates/下，thymeleaf 就能自动渲染了。
    	...
    }
   具体使用步骤如下：
   第一步：引入thymeleaf 的 starter 依赖
        <dependency>
           <groupId>org.springframework.boot</groupId>
           <artifactId>spring-boot-starter-thymeleaf</artifactId>
           //版本springboot 已经管理了。如果需要自己修改版本，官方推荐的方法是，在项目的<properties>节点下增加如下的配置
           //<thymeleaf.version>3.0.2.RELEASE</thymeleaf.version>
           //<thymeleaf-layout-dialect.version>2.1.1</thymeleaf-layout-dialect.version> //布局功能的支持程序
           //其实就是覆盖springboot 默认的 thymeleaf.version 和 thymeleaf-layout-dialect.version 版本。
        </dependency>

   第二步：在classpath:/templates/ 目录下新建thymeleaf的模板文件，如 success.html
   第三步：编写控制器方法
         @GetMapping("/success")
         public String success(){
            //这时候的返回success 会去 classpath:/templates/ 目录下寻找 success.html 模板文件进行渲染。
            return "success";
         }
         如此：当访问 http://localhost:8080/success 时，就能访问到success.html 模板文件内容了（注意返回的内容已经经过Thymeleaf模板引擎渲染过的）。

3，Thymeleaf 的语法，通过案例直接说明，以success.html 页面为例
   <!DOCTYPE html>
   <html xmlns:th="http://www.thymeleaf.org">   //这里需要加入导入thymeleaf 的名称空间，导入后才有语法自动提示功能。xmlns:th="http://www.thymeleaf.org"
        <head>
            <meta charset="UTF-8">
            <title>title</title>
        </head>
        <body>
            <!--th:text 改变当前元素的文本内容。语法：th:任意属性="${表达式}" 表示用表达式的值来作为元素原生属性的值-->
            <div th:text="${hello}"></div>
        </body>
   </html>

   更多的Thymeleaf 的语法，需要的时候再研究了。

